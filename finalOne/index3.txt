;

        function makeContent(cont) {
            var contentHolder = '<div id="content">' +
                '<div id="siteNotice">' +
                '</div>';
            for (var i = 0; i < cont.meetingGroups.length; i++) {
            if (i == 0) {
                contentHolder = contentHolder + '<h2>' + cont.meetingGroups[i].groupInfo.meetingBlgd + '</h2>';
            }  
            
            // cont.meetingGroups[i].groupInfo.meetingAddress1.substr(0, cont.meetingGroups[i].groupInfo.meetingAddress1.indexOf(','))
            // if i only want the address without the city and  zip
                contentHolder = contentHolder + '<h1 id="firstHeading" class="firstHeading">';
                contentHolder = contentHolder + cont.meetingGroups[i].groupInfo.meetingName + '</h1>';
                contentHolder = contentHolder + '<p3>' + cont.meetingGroups[i].groupInfo.meetingAddress1.substr(0, cont.meetingGroups[i].groupInfo.meetingAddress1.indexOf(',')) + '</p3>';
                
                if (cont.meetingGroups[i].groupInfo.meetingAddress2 == '') {
                    contentHolder = contentHolder + ', ' + 'New York, ' + cont.meetingGroups[i].groupInfo.meetingAddress1.split(',')[2] + '<br>';
                }
                
                else {
                
               contentHolder = contentHolder + ', ' + cont.meetingGroups[i].groupInfo.meetingAddress2 + ', ' + 'New York, ' + cont.meetingGroups[i].groupInfo.meetingAddress1.split(',')[2] + '<br>';
                }
                contentHolder = contentHolder + '<br>' + '<p1>' + 'Note:' + '</p1>' + '<br>';
                contentHolder = contentHolder + '<note id="note" class="note">';
                 contentHolder = contentHolder + cont.meetingGroups[i].groupInfo.meetingDetails + '</note>' + '</br>';
                
                if (cont.meetingGroups[i].groupInfo.meetingDetails == '') {
                    contentHolder = contentHolder + 'N/A';
                }
                
                if (cont.meetingGroups[i].groupInfo.meetingWheelchair == true) {
                    contentHolder = contentHolder + '<wheel id="wheel" class="wheel">';
                    contentHolder = contentHolder + 'Wheelchair Accessible' + '</wheel>';
                }
                
                
                contentHolder = contentHolder + '<p1>' + 'Upcoming meetings today:' + '</p1>' + '<br>';
            
                //    var dt;
                //    if (cont.meetingGroups[i].meetingDay == '0') {
                //        dt = "Sunday ";
                //    }
                //    else if (cont.meetingGroups[i].meetingDay == '1') {
                //        dt = "Monday ";
                //    }
                //    else if (cont.meetingGroups[i].meetingDay == '2') {
                //        dt = "Tuesday ";
                //    }
                //    else if (cont.meetingGroups[i].meetingDay == '3') {
                //        dt = "Wednesday ";
                //    }
                //    else if (cont.meetingGroups[i].meetingDay == '4') {
                //        dt = "Thursday ";
                //    }
                //    else if (cont.meetingGroups[i].meetingDay == '5') {
                //        dt = "Friday ";
                //    }
                //    else if (cont.meetingGroups[i].meetingDay == '6') {
                //        dt = "Saturday ";
                //    }
                //    else {
                //        dt = "";
                //    }
            
                // contentHolder = contentHolder + '<br>' + '<br>' + 'What meetings are coming up on ' + dt + '?';
                
                contentHolder = contentHolder + '<div id="mtg" class="mtg">';
                
                for (var j = 0; j < cont.meetingGroups[i].meetingType.length; j++) {
                    var mt, si;
                    if (cont.meetingGroups[i].meetingType[j] == "BB = Big Book meeting") {
                        mt = "Big Book ";
                    }
                    else if (cont.meetingGroups[i].meetingType[j] == "B = Beginners meeting") {
                        mt = "Beginners ";
                    }
                    else if (cont.meetingGroups[i].meetingType[j] == "C = Closed Discussion meeting") {
                        mt = "Closed Discussion ";
                    }
                    else if (cont.meetingGroups[i].meetingType[j] == "S = Step meeting") {
                        mt = "Step ";
                    }
                    else if (cont.meetingGroups[i].meetingType[j] == "T = Tradition meeting") {
                        mt = "Tradition ";
                    }
                    else if (cont.meetingGroups[i].meetingType[j] == "O = Open meeting") {
                        mt = "Open Meeting ";
                    }
                    else if (cont.meetingGroups[i].meetingType[j] == "OD = Open Discussion meeting") {
                        mt = "Open Discussion ";
                    }
                    else {
                        mt = "";
                    }

                    contentHolder = contentHolder + '<p2>' + cont.meetingGroups[i].meetingStartTime[j] + '</p2>' + ' &nbsp;&nbsp; ' + mt + '<br>';
                }
            
                contentHolder = contentHolder + '</p>' + '</div>';
                contentHolder = contentHolder + '<div class="iw-bottom-gradient"></div>';
            }
            return contentHolder;
        }

        function setMarkers(map, locations) {
            // Add markers to the map
            var infowindow = new google.maps.InfoWindow({
                maxWidth: 200
            });

            for (var i = 0; i < locations.length; i++) {
                var meeting = locations[i];
                var myLatLng = new google.maps.LatLng(meeting._id.latLong);

                var contentWindow = makeContent(meetings[i]);


                var marker = new google.maps.Marker({
                    position: myLatLng,
                    map: map,
                    title: "Click for meeting info",
                    content: contentWindow,
                });

                google.maps.event.addListener(marker, 'click', function() {
                    infowindow.setContent(this.content);
                    infowindow.open(map, this);
                });
            }
        }
        google.maps.event.addDomListener(window, 'load', initialize);
    </script>
</head>

<body>
    <div id="map-canvas"></div>
</body>

</html>